# Optimized R-CMD-check workflow for SCP package
# This workflow balances speed with essential quality checks

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

name: R-CMD-check-optimized

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          # Minimal matrix: test on Linux (fastest) and one other OS
          - {os: ubuntu-latest, r: 'release'}
          # Optional: Add macOS or Windows for releases only
          # - {os: macOS-latest, r: 'release'}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes
      # Skip SSL verification for external downloads during examples
      DOWNLOAD_STATIC_LIBV8: 1
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      _R_CHECK_FORCE_SUGGESTS_: false
      # Timeout for examples (in seconds)
      _R_CHECK_EXAMPLE_TIMING_THRESHOLD_: 30
      # Skip network-dependent tests
      NOT_CRAN: false

    steps:
      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          use-public-rspm: true

      # Only install essential system dependencies
      - name: Install minimal system dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update -y
          sudo apt-get install -y --no-install-recommends \
            libcurl4-openssl-dev \
            libssl-dev \
            libxml2-dev \
            libharfbuzz-dev \
            libfribidi-dev

      # Cache R packages to speed up builds
      - name: Cache R packages
        uses: actions/cache@v3
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-r-${{ matrix.config.r }}-${{ hashFiles('DESCRIPTION') }}
          restore-keys: |
            ${{ runner.os }}-r-${{ matrix.config.r }}-

      - name: Install BiocManager
        run: |
          if (!requireNamespace("BiocManager", quietly = TRUE))
            install.packages("BiocManager")
        shell: Rscript {0}

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::rcmdcheck
          needs: check

      # Quick check - skip slow/network-dependent operations
      - name: Run Quick R CMD check
        uses: r-lib/actions/check-r-package@v2
        with:
          upload-snapshots: false
          error-on: '"error"'  # Only fail on errors, not warnings or notes
          args: 'c("--no-manual", "--no-vignettes", "--no-build-vignettes", "--no-examples")'
          check-dir: '"check"'

      # Optional: Run examples separately with better error handling
      - name: Test examples (allow failures)
        if: always()
        continue-on-error: true
        run: |
          # Create a test script that handles SSL errors gracefully
          cat > test_examples.R << 'EOF'
          # Override download.file to handle SSL errors
          original_download <- base::download.file
          base::download.file <- function(url, destfile, ...) {
            tryCatch({
              original_download(url, destfile, method = "curl", extra = "-k", ...)
            }, error = function(e) {
              message("Download failed (likely SSL issue): ", e$message)
              # Create empty file to continue
              file.create(destfile)
            })
          }

          # Run examples
          devtools::run_examples(run_donttest = FALSE, run_dontrun = FALSE)
          EOF
          Rscript test_examples.R || echo "Examples completed with warnings"
        shell: bash

# Separate workflow for comprehensive testing (run weekly or before releases)
# Create a separate file: R-CMD-check-full.yaml for complete testing