# Comprehensive R-CMD-check workflow for SCP package
# Run this weekly or before releases for thorough testing

on:
  workflow_dispatch:  # Manual trigger
  schedule:
    - cron: '0 0 * * 0'  # Weekly on Sunday at midnight
  push:
    tags:
      - 'v*'  # Run on version tags

name: R-CMD-check-full

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          # Full matrix for comprehensive testing
          - {os: macOS-latest,   r: 'release'}
          - {os: windows-latest, r: 'release'}
          - {os: ubuntu-latest,  r: 'devel', http-user-agent: 'release'}
          - {os: ubuntu-latest,  r: 'release'}
          - {os: ubuntu-latest,  r: 'oldrel-1'}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes
      _R_CHECK_FORCE_SUGGESTS_: true  # Check all suggested packages
      NOT_CRAN: true  # Enable additional tests

    steps:
      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      # Full system dependencies for Bioconductor packages
      - name: Install system dependencies for Bioconductor packages
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update -y
          sudo apt-get install -y \
            libxml2-dev libcurl4-openssl-dev libssl-dev \
            libgit2-dev libharfbuzz-dev libfribidi-dev \
            libfreetype6-dev libpng-dev libtiff5-dev \
            libjpeg-dev libgdal-dev libudunits2-dev \
            libgeos-dev libproj-dev libglpk-dev

      # Python setup for reticulate-based functions
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install scanpy anndata numpy pandas scipy

      - name: Install BiocManager
        run: |
          install.packages('BiocManager')
        shell: Rscript {0}

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::rcmdcheck, any::BiocManager, any::covr
          needs: check

      # Full R CMD check with all features enabled
      - name: Full R CMD check
        uses: r-lib/actions/check-r-package@v2
        with:
          upload-snapshots: true
          error-on: '"warning"'  # Stricter for full tests
          args: 'c("--as-cran")'  # Full CRAN-like checks

      # Code coverage (optional)
      - name: Test coverage
        if: matrix.config.os == 'ubuntu-latest' && matrix.config.r == 'release'
        run: |
          covr::codecov(quiet = FALSE)
        shell: Rscript {0}